version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d smarthome"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - smarthome-bd-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./smart_home/init.sql:/docker-entrypoint-initdb.d/00-init.sql

  temperature-api:
    build:
      context: ./temperature_api
      dockerfile: Dockerfile
    container_name: smarthome-temperature-api
    # ports:
    #   - "8081:8081"
    networks:
      - smarthome-network

  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
      temperature-api:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/smarthome
      - TEMPERATURE_API_URL=http://temperature-api:8081
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network
      - smarthome-bd-network

volumes:
  postgres-data:

networks:
  smarthome-network:
    driver: bridge
  smarthome-bd-network:
    driver: bridge
