openapi: 3.0.3
info:
  title: Home Service API
  version: 1.0.0
  description: Управление умными домами и привязка устройств

paths:
  /:
    post:
      tags: [Homes]
      summary: Создать новый умный дом
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHomeRequest"
      responses:
        "201":
          description: Дом создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Home"
        "400":
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /{homeId}/devices:
    post:
      tags: [Homes]
      summary: Привязать устройство к дому
      security:
        - BearerAuth: []
      parameters:
        - name: homeId
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddDeviceRequest"
      responses:
        "201":
          description: Устройство привязано
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        "404":
          description: Дом не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    UUID:
      type: string
      format: uuid
      example: "550e8400-e29b-41d4-a716-446655440000"

    CreateHomeRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
          example: "Мой умный дом"
        address:
          type: string
          example: "ул. Примерная, 123"

    AddDeviceRequest:
      type: object
      required: [deviceId, pairingCode]
      properties:
        deviceId:
          type: string
          example: "device-12345"
        pairingCode:
          type: string
          example: "ABC123-XYZ"

    Home:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
        address:
          type: string
        userId:
          $ref: "#/components/schemas/UUID"

    Device:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        homeId:
          $ref: "#/components/schemas/UUID"
        name:
          type: string
          example: "Умная лампа"
        type:
          type: string
          enum: [LIGHT, SENSOR, SWITCH]
          example: LIGHT

    Error:
      type: object
      properties:
        error:
          type: string
          example: "HOME_NOT_FOUND"
        message:
          type: string
          example: "Дом с указанным ID не существует"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
