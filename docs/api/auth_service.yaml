openapi: 3.0.3
info:
  title: Auth Service API
  version: 1.0.0
  description: Микросервис аутентификации и управления пользователями

paths:
  /register:
    post:
      tags: [Auth]
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /login:
    post:
      tags: [Auth]
      summary: Аутентификация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    UUID:
      type: string
      format: uuid
      example: "550e8400-e29b-41d4-a716-446655440000"

    RegisterRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          minLength: 8
          example: "securePass123"
        name:
          type: string
          example: "Иван Петров"

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
        userId:
          $ref: "#/components/schemas/UUID"

    Error:
      type: object
      properties:
        error:
          type: string
          example: "INVALID_CREDENTIALS"
        message:
          type: string
          example: "Неверный email или пароль"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
